name: CD BACKEND NEOS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH for frontend and backend
        run: |
          mkdir -p ~/.ssh
        
          # Salvar a chave privada em um arquivo temporário
          ssh-keygen -t rsa -b 2048 -f ~/.ssh/blume_key.pem
          
          # Definir permissões de acesso corretas para a chave privada
          chmod 400 ~/.ssh/blume_key.pem

      - name: Deploy Docker image to both backends via jump server
        env:
          PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
          BACKEND_IP_1: ${{ secrets.PRIVATE_IP_1 }}
          BACKEND_IP_2: ${{ secrets.PRIVATE_IP_2 }}
        run: |
          # Conectar ao primeiro backend via jump server (frontend) usando ProxyJump
          ssh -o StrictHostKeyChecking=no -i blume_key.pem \
            -o ProxyJump=ubuntu@$PUBLIC_IP \
            ubuntu@$BACKEND_IP_1 << 'EOF'
              # Comandos SSH para atualizar a imagem Docker na primeira VM do backend
              sudo docker pull victorlcdpaula/backend-neos:latest
              sudo docker run -d -p 8080:8080 victorlcdpaula/backend-neos:latest
            EOF

          # Conectar ao segundo backend via jump server (frontend) usando ProxyJump
          ssh -o StrictHostKeyChecking=no -i blume_key.pem \
            -o ProxyJump=ubuntu@$PUBLIC_IP \
            ubuntu@$BACKEND_IP_2 << 'EOF'
              # Comandos SSH para atualizar a imagem Docker na segunda VM do backend
              sudo docker pull victorlcdpaula/backend-neos:latest
              sudo docker run -d -p 8080:8080 victorlcdpaula/backend-neos:latest
            EOF

      - name: Clean up private key
        run: |
          rm -f ~/.ssh/blume_key.pem
