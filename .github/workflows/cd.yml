name: CD BACKEND NEOS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH keys
        run: |
          mkdir -p ~/.ssh
          # Criar uma nova chave privada para SSH
          ssh-keygen -t rsa -b 2048 -f ~/.ssh/blume_key.pem -N ""
          
          # Definir permissões para as chaves
          chmod 600 ~/.ssh/blume_key.pem
          chmod 644 ~/.ssh/blume_key.pem.pub

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Deploy Docker image to backend servers
        env:
          PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
          BACKEND_IP_1: ${{ secrets.PRIVATE_IP_1 }}
          BACKEND_IP_2: ${{ secrets.PRIVATE_IP_2 }}
        run: |
          # Copiar as chaves para o jump server (public_ip)
          scp -i ~/.ssh/blume_key.pem ~/.ssh/blume_key.pem $PUBLIC_IP:/home/ubuntu/
          scp -i ~/.ssh/blume_key.pem.pub ~/.ssh/blume_key.pem.pub $PUBLIC_IP:/home/ubuntu/

          # Conectar à máquina pública (jump server) e acessar as máquinas privadas
          ssh -i ~/.ssh/blume_key.pem ubuntu@$PUBLIC_IP << 'EOF'
            # Comandos executados na máquina pública (jump server)
            echo "Acessando o jump server"

            # Transferir a chave privada para a máquina pública
            echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/private_key.pem
            chmod 600 ~/private_key.pem
            ssh-keyscan -H $BACKEND_IP_1 >> ~/.ssh/known_hosts
            ssh-keyscan -H $BACKEND_IP_2 >> ~/.ssh/known_hosts

            # Conectar à primeira máquina privada e executar comandos
            echo "Acessando a máquina privada 1"
            ssh -i ~/private_key.pem ubuntu@$BACKEND_IP_1 << 'PRIVATE_EOF'
              # Comandos a serem executados no backend 1
              sudo docker ps -a --filter ancestor=victorlcdpaula/backend-neos:latest -q | xargs -r sudo docker stop
              sudo docker ps -a --filter ancestor=victorlcdpaula/backend-neos:latest -q | xargs -r sudo docker rm
              sudo docker pull victorlcdpaula/backend-neos:latest
              sudo docker run -d -p 8080:8080 victorlcdpaula/backend-neos:latest
            PRIVATE_EOF

            # Conectar à segunda máquina privada e executar comandos
            echo "Acessando a máquina privada 2"
            ssh -i ~/private_key.pem ubuntu@$BACKEND_IP_2 << 'PRIVATE_EOF'
              # Comandos a serem executados no backend 2
              sudo docker ps -a --filter ancestor=victorlcdpaula/backend-neos:latest -q | xargs -r sudo docker stop
              sudo docker ps -a --filter ancestor=victorlcdpaula/backend-neos:latest -q | xargs -r sudo docker rm
              sudo docker pull victorlcdpaula/backend-neos:latest
              sudo docker run -d -p 8080:8080 victorlcdpaula/backend-neos:latest
            PRIVATE_EOF
          EOF

      - name: Clean up private key
        run: |
          rm -f ~/.ssh/blume_key.pem
